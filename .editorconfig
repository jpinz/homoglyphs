[*.cs]
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent

##
## StyleCop.Analyzers
##

# Using directive should appear within a namespace declaration
dotnet_diagnostic.sa1200.severity = None

# XML comment analysis is disabled due to project configuration
dotnet_diagnostic.sa0001.severity = None

# The file header is missing or not located at the top of the file
dotnet_diagnostic.sa1633.severity = None

# Use string.Empty for empty strings
dotnet_diagnostic.sa1122.severity = None

# Variable '_' should begin with lower-case letter
dotnet_diagnostic.sa1312.severity = None

# Parameter '_' should begin with lower-case letter
dotnet_diagnostic.sa1313.severity = None

# Elements should be documented
dotnet_diagnostic.sa1600.severity = None

# Prefix local calls with this
dotnet_diagnostic.sa1101.severity = None

# 'public' members should come before 'private' members
dotnet_diagnostic.sa1202.severity = None

# Comments should contain text
dotnet_diagnostic.sa1120.severity = None

# Constant fields should appear before non-constant fields
dotnet_diagnostic.sa1203.severity = None

# Field '_blah' should not begin with an underscore
dotnet_diagnostic.sa1309.severity = None

# Use trailing comma in multi-line initializers
dotnet_diagnostic.sa1413.severity = None

# A method should not follow a class
dotnet_diagnostic.sa1201.severity = None

# Elements should be separated by blank line
dotnet_diagnostic.sa1516.severity = None

# The parameter spans multiple lines
dotnet_diagnostic.sa1118.severity = None

# Static members should appear before non-static members
dotnet_diagnostic.sa1204.severity = None

# Put constructor initializers on their own line
dotnet_diagnostic.sa1128.severity = None

# Opening braces should not be preceded by blank line
dotnet_diagnostic.sa1509.severity = None

# The parameter should begin on the line after the previous parameter
dotnet_diagnostic.sa1115.severity = None

# File name should match first type name
dotnet_diagnostic.sa1649.severity = None

# File may only contain a single type
dotnet_diagnostic.sa1402.severity = None

# Enumeration items should be documented
dotnet_diagnostic.sa1602.severity = None

# Element should not be on a single line
dotnet_diagnostic.sa1502.severity = None

# Closing parenthesis should not be preceded by a space
dotnet_diagnostic.sa1009.severity = None

# Closing parenthesis should be on line of last parameter
dotnet_diagnostic.sa1111.severity = None

# Braces should not be ommitted
dotnet_diagnostic.sa1503.severity = None

##
## SonarAnalyzers.CSharp
##

# Update this method so that its implementation is not identical to 'blah'
dotnet_diagnostic.s4144.severity = None

# Update this implementation of 'ISerializable' to conform to the recommended serialization pattern
dotnet_diagnostic.s3925.severity = None

# Rename class 'IOCActivator' to match pascal case naming rules, consider using 'IocActivator'
dotnet_diagnostic.s101.severity = None

# Extract this nested code block into a separate method
dotnet_diagnostic.s1199.severity = None

# Remove unassigned auto-property 'Blah', or set its value
dotnet_diagnostic.s3459.severity = None

# Remove the unused private set accessor in property 'Version'
dotnet_diagnostic.s1144.severity = None

# Remove this commented out code
dotnet_diagnostic.s125.severity = None

# 'System.Exception' should not be thrown by user code
dotnet_diagnostic.s112.severity = None

[*]

# Microsoft .NET properties
csharp_new_line_before_members_in_object_initializers = false
csharp_space_after_cast = false

# ReSharper properties
resharper_blank_lines_before_control_transfer_statements = 1
resharper_csharp_max_line_length = 127
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_expr_property_on_single_line = true
resharper_place_simple_anonymousmethod_on_single_line = false
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_object_and_collection_initializer_style = chop_always
